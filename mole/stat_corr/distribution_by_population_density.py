# OeQ autogenerated correlation for 'Buildings with n flats in correlation to population density'

import math
import numpy as np
def distribution_by_population_density(xin,mode='distribution'):

    # OeQ autogenerated correlation for 'Buildings with housing with 1 flat'
    Const= 1.04973644198
    a=     -0.151469688449
    b=     0.0210688033972
    c=     0.00028817823546
    d=     -0.000205321958001
    x=xin
    x=math.log(x)
    BLD_NOFLAT_1 = Const + a*x + b*x**2 + c*x**3 + d*x**4
    # OeQ autogenerated correlation for 'Buildings with housing with 2 flats'
    Const= -0.0268737715824
    a=     0.0894154067354
    b=     -0.00883730566808
    c=     -9.09246219414e-06
    x=xin
    x=math.log(x)
    BLD_NOFLAT_2 = Const + a*x + b*x**2 + c*x**3
    # OeQ autogenerated correlation for 'Buildings with housing with 3 up to 6 flats'
    Const= -0.0125526276602
    a=     0.0618719994128
    b=     -0.021240734472
    c=     0.00291764904325
    d=     -9.7715780023e-05
    x=xin
    x=math.log(x)
    BLD_NOFLAT_3TO6 = Const + a*x + b*x**2 + c*x**3 + d*x**4
    # OeQ autogenerated correlation for 'Buildings with housing with 7 up to 12 flats'
    Const= 0.0217514712676
    a=     -0.0365396921989
    b=     0.0192926288569
    c=     -0.0038863881763
    d=     0.000280350342124
    x=xin
    x=math.log(x)
    BLD_NOFLAT_7TO12 = Const + a*x + b*x**2 + c*x**3 + d*x**4
    # OeQ autogenerated correlation for 'Buildings with housing with more than 13 flats'
    Const= 0.0238167058916
    a=     -0.0378671564775
    b=     0.0187629594468
    c=     -0.00356877043081
    d=     0.000231111367083
    x=xin
    x=math.log(x)
    BLD_NOFLAT_MTH13 = Const + a*x + b*x**2 + c*x**3 + d*x**4
 
    l_sum = BLD_NOFLAT_1 + BLD_NOFLAT_2 + BLD_NOFLAT_3TO6 + BLD_NOFLAT_7TO12 + BLD_NOFLAT_MTH13
    if mode is 'distribution':
        return {'BLD_NOFLAT_1' : BLD_NOFLAT_1/l_sum, 'BLD_NOFLAT_2' : BLD_NOFLAT_2/l_sum, 'BLD_NOFLAT_3TO6' : BLD_NOFLAT_3TO6/l_sum, 'BLD_NOFLAT_7TO12' : BLD_NOFLAT_7TO12/l_sum, 'BLD_NOFLAT_MTH13' : BLD_NOFLAT_MTH13/l_sum}

    return(BLD_NOFLAT_1/l_sum * 1 + BLD_NOFLAT_2/l_sum * 2 + BLD_NOFLAT_3TO6/l_sum * 4.5 + BLD_NOFLAT_7TO12/l_sum * 9.5 + BLD_NOFLAT_MTH13/l_sum * 20 )

print distribution_by_population_density(5000,"average")
